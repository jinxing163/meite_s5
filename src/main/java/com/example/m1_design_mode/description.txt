
// ================ 设计模式 ================ //

策略模式 => n1_strategy_model
定义：定义一系列的算法，将算法进行封装、隔离、相互独立、又能相互替换
使用场景：第三方支付方式选择、底层多套API的调用

装饰模式 => n2_decorate_model
定义：在不改变原有对象的基础上，扩展很多功能
使用场景：网关+日志记录+接口限流+API鉴权等

责任链模式 => n3_chain_model
定义：责任链是一种动态的行为模式。是由每一个对象对下家的引用，形成一个链条。请求在链条上运行，直到某一个对象处理这个请求。
客户端并不知道那个链条处理此请求，使系统能动态的组织和分配责任。

模板方法设计模式

代理模式
纯手动动态代理模式
观察者模式
门面与状态模式
适配器模式
单例模式
利用反编译技术深入理解枚举单例底层实现原理
